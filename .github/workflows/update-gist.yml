name: Update VPN Servers Gist

on:
  schedule:
    - cron: '0 */4 * * *'
  workflow_dispatch:

jobs:
  update-gist:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Fetch and Save VPN Data
        run: |
          python << 'EOF'
          import requests
          import json
          from datetime import datetime

          # Fetch VPN data
          response = requests.get(
              'http://www.vpngate.net/api/iphone/',
              headers={'User-Agent': 'Mozilla/5.0'},
              timeout=10
          )
          response.raise_for_status()

          # Save to file
          content = {
              'last_updated': datetime.utcnow().isoformat(),
              'data': response.text
          }
          
          with open('vpn_servers.json', 'w') as f:
              json.dump(content, f, indent=2)
          
          print('VPN data saved successfully')
          EOF

      - name: Update Gist
        uses: exuanbo/actions-deploy-gist@v1
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gist_id: b3049dbc387bf59cbf6810ae0ee90aff
          file_path: vpn_servers.json
          file_type: json

      - name: Verify Gist update
        run: |
          python << 'EOF'
          import requests
          import json
          import sys
          from datetime import datetime, timezone
          
          try:
              # Wait a few seconds for Gist to update
              import time
              time.sleep(5)
              
              # Verify Gist content
              response = requests.get(
                  'https://gist.githubusercontent.com/mortezabahmani/b3049dbc387bf59cbf6810ae0ee90aff/raw/vpn_servers.json',
                  timeout=10
              )
              response.raise_for_status()
              
              data = response.json()
              last_updated = datetime.fromisoformat(data['last_updated'])
              age = (datetime.now(timezone.utc) - last_updated).total_seconds()
              
              if age > 300:  # More than 5 minutes old
                  raise ValueError(f"Gist not updated (age: {age:.0f} seconds)")
                  
              print("Gist update verified successfully")
              
          except Exception as e:
              print(f"Verification failed: {str(e)}")
              sys.exit(1)
          EOF
